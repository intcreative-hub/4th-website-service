// This is your Prisma schema file for Website 3rd Tier
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model for future authentication
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      String   @default("user") // user, admin
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Contact form submissions
model ContactSubmission {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String?
  service   String?
  message   String
  status    String   @default("new") // new, read, responded
  createdAt DateTime @default(now())

  @@index([email])
  @@index([createdAt])
}

// Appointment/Booking system
model Appointment {
  id            String   @id @default(cuid())
  customerName  String
  customerEmail String
  customerPhone String
  service       String
  date          DateTime
  time          String
  duration      Int      @default(60) // minutes
  notes         String?
  status        String   @default("pending") // pending, confirmed, cancelled, completed
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([date])
  @@index([status])
  @@index([customerEmail])
}

// Blog posts
model BlogPost {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  excerpt     String
  content     String   @db.Text
  coverImage  String?
  author      String   @default("Admin")
  category    String?
  tags        String[] // Array of tags
  published   Boolean  @default(false)
  views       Int      @default(0)
  readTime    Int      @default(5) // minutes
  publishedAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([slug])
  @@index([published])
  @@index([category])
}

// E-commerce products
model Product {
  id          String      @id @default(cuid())
  name        String
  slug        String      @unique
  description String      @db.Text
  price       Float
  salePrice   Float?
  images      String[]    // Array of image URLs
  category    String
  stock       Int         @default(0)
  sku         String?     @unique
  featured    Boolean     @default(false)
  active      Boolean     @default(true)
  tags        String[]
  variants    Json?       // For sizes, colors, etc.
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderItems  OrderItem[]

  @@index([slug])
  @@index([category])
  @@index([featured])
  @@index([active])
}

// Orders
model Order {
  id              String      @id @default(cuid())
  orderNumber     String      @unique
  customerName    String
  customerEmail   String
  customerPhone   String?
  shippingAddress Json?       // Flexible address structure
  billingAddress  Json?
  subtotal        Float
  tax             Float       @default(0)
  shipping        Float       @default(0)
  total           Float
  status          String      @default("pending") // pending, processing, shipped, delivered, cancelled
  paymentStatus   String      @default("pending") // pending, paid, failed, refunded
  paymentId       String?     // Stripe payment intent ID
  notes           String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  orderItems      OrderItem[]

  @@index([orderNumber])
  @@index([customerEmail])
  @@index([status])
  @@index([createdAt])
}

// Order items (products in an order)
model OrderItem {
  id        String   @id @default(cuid())
  orderId   String
  productId String
  name      String   // Snapshot of product name at time of purchase
  price     Float    // Snapshot of price at time of purchase
  quantity  Int
  subtotal  Float
  variant   Json?    // Selected variant (size, color, etc.)
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [id])

  @@index([orderId])
  @@index([productId])
}

// Newsletter subscribers
model Newsletter {
  id            String   @id @default(cuid())
  email         String   @unique
  name          String?
  status        String   @default("active") // active, unsubscribed
  source        String?  // Where they signed up (footer, popup, etc.)
  confirmedAt   DateTime?
  unsubscribedAt DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([email])
  @@index([status])
}
